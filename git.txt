git push

참고 링크
https://velog.io/@hyeongjun/Git-GitHub-Repository%EC%97%90-push-%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-%ED%8C%8C%EC%9D%BC-%EC%98%AC%EB%A6%AC%EA%B8%B0

git pull 저장/변경된 내용 가져옴 원래 있는 파일에 병합

git 명령어 공부
git init: 새로운 git저장소를 생성할 때 사용하는 명령어이다
git status:현재 파일의 상태를 확인할 수 있다

//git add:작업 디렉토리 상의 변경 내용을 스테이징 영역에 추가하기 위해서 사용하는 명령어
git add. : working directory에 있는 파일 중에서 변경된 모든 파일을 선택하는 명령어이다

git commit:로컬 저장소에 변경된 파일을 commit 한다
git commit -m "커밋메세지"
스테이징 영역의 파일들을 커밋하여 Repository에 저장한다.

git push:로컬 저장소에 커밋된 파일을 원격 저장소에 push하는 명령어이다
git push <저장소명> <브랜치명>// git push

git branch:사용자가 독립적으로 작업을 진행할 수 있도록 돕는 작업 흐름이다.

git pull:특정 브랜치 코드 가져온다
git pull origin [브랜치명]

git clone:원격 저장소 코드를 통채로 가져옴
git clone [url]

git checkout:파일을 변경하거나 복원할 때 사용
git switch:파일을 변경할 때 사용(checkout에 많은 기능이 있어서 분할하여 기능을 새로 추가)
git restore: 파일을 복원할 때 사용(checkout에 많은 기능이 있어서 분할하여 기능을 새로 추가)

git Merge: 브랜치에서 개발한 변경 사항을 다른 브랜치로 통합하는 작업이다
git switch master 
git merge [브랜치]
master브랜치에 다른 브랜치를 합침






코드 수정
1) add
git add .
git add <파일 이름>
2) commit
git commit -m "메세지 입력"
3) push
git push origin <branch 이름>

//
이 오류는 로컬 브랜치가 원격 브랜치보다 뒤쳐져 있어서 발생. 
다른 사용자 또는 다른 디바이스가 원격 저장소에 푸시한 변경 사항이 로컬에 반영되지 않은 상태
 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/ino0807/inoproject.git'
hint: Updates were rejected because the remote contains work that you do not
hint: have locally. This is usually caused by another repository pushing to
hint: the same ref. If you want to integrate the remote changes, use
hint: 'git pull' before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

user@DESKTOP-TO3KS8S MINGW64 /c/APM/Apache24/htdocs (master)
//

해결코드
git pull origin master

//
이 오류는 서로 다른 두 개의 Git 저장소가 관련 없는 이력을 가지고 있기 때문에 발생
일반적으로 이 오류는 두 저장소에서 서로 다른 이력을 가지고 있는 경우나, 한 저장소가 초기화되거나 다시 생성된 경우에 발생
From https://github.com/ino0807/inoproject
 * branch            master     -> FETCH_HEAD
fatal: refusing to merge unrelated histories
//

git pull origin master --allow-unrelated-histories
해결코드


맨 처음 프로젝트 올릴 때 git init(중요)

git remote add origin 레퍼지토리 주소 (저장소 연결)

git checkout -b "브랜치명" (브랜치 변경)
*처음 브랜치를 생성하고 해당 브랜치로 넘어가는 명령어 이미 브랜치가 생성되었으면 사용할 수 없음
git checkout "브랜치명"으로 대체할 수 있음

git 충돌(marge 명령어로 브랜치 합칠 때) :

같은 파일의 기존에 있던 코드와 새로운 코드가 합쳐질 시 생김

accept incoming change (새로운 코드를 받아드림)툴

Accept current change (기존의 코드를 사용)툴

같은 파일로 두사람 이상 작업 시 에러나기 쉬움

파일을 다르게 하면 충돌이 안 남

git branch  로컬 브랜치 목록 조회
git branch -r 원격 브랜치 목록 조회
git branch -a 모든 브랜치 목록 조회

git remote -v 현재 연결되어 있는 remote 저장소 url 주소 확인

git remote set-url origin "url주소" 연결되어 있는 remote 저장소 url 주소 변경

git merge -Xours "병합할 브랜치"현재 브랜치에 변경된 내용을 유지하면서 targetBranch 브랜치를 병합
git merge -Xtheirs "병합할 브랜치" 현재 브랜치에 변경된 내용을 무시하고 targetBranch 브랜치의 변경사항을 모두 반영하여 병합
//충돌이 발생 시 바로 실행되는 명령어이기 때문에 사용에 주의가 필요함(예를 들어서 Xours 명령어를 사용했다면 충돌 부분을 볼 새도 없이 곧 바로 현재 브랜치의 변경사항을 따름

<<<<<<< HEAD: 이 표시 아래의 내용은 현재 브랜치(main 브랜치)의 수정 내용
=======: 수정 내용과 다음 섹션의 수정 내용을 구분하는 구분자
>>>>>>> master: 이 표시 위의 내용은 병합하려는 대상 브랜치(master 브랜치)의 수정 내용

master 충돌입니ㅇ다
