<?php

    echo 2+2;  4  
    echo 2-2;  0
    echo 2/2;  1
    echo 2*2;  4
    echo 2%2;  0  나누고 남는 값 반환
    echo 2**2;  4 제곱
?>

var_dump
연산자의 형식을 확인할 수 있음

<?php
  var_dump(1);
  var_dump(1.5);
  var_dump ("a");
?>
결과값: int(1) float(1.5) string(1) "a"

.을 넣으면 문자를 결합할 수 있음
<?php
    echo 1 . "  " . "hello";
?>
1  hello;
1 공백 헬로가 결합된 값

문자 안에 인용구 사용 (다른 따옴표를 사용한다
<?php
    echo "안녕'하세요' ";

?>
결과값 : 안녕'하세요'

$(변수이름)

<?php
    $ver = 10;
    echo $ver;

?>
결과값: 10

변수명 규칙

변수의 이름은 영문 대소문자, 숫자, 언더스코어(_)로만 구성됨
변수의 이름은 숫자와의 구분을 빠르게 하기 위해 숫자로는 시작할 수 없음
변수의 이름에는 공백이 포함될 수 없음
변수의 이름으로 PHP에서 미리 정의한 $this는 사용할 수 없음
변수의 이름은 대소문자를 구분

함수 선언
<?php
  define("title", "hi");
  echo title;
?>
결과값: hi

+=
왼쪽의 피연산자에게 오른쪽의 피연산자를 더한 후, 왼쪽의 피연산자에 대입함.

-=
왼쪽의 피연산자에게 오른쪽의 피연산자를 뺀 후, 왼쪽의 피연산자에 대입함.

*=
왼쪽의 피연산자에게 오른쪽의 피연산자를 곱한 후, 왼쪽의 피연산자에 대입함.

/=
왼쪽의 피연산자에게 오른쪽의 피연산자로 나눈 후, 왼쪽의 피연산자에 대입함.

%=
왼쪽의 피연산자에게 오른쪽의 피연산자로 나눈 후, 그 나머지를 왼쪽의 피연산자에 대입함.

==
왼쪽의 피연산자와 오른쪽의 피연산자가 같으면 참을 반환함.

===
왼쪽의 피연산자와 오른쪽의 피연산자가 같고, 같은 타입이면 참을 반환함.

!=
왼쪽의 피연산자와 오른쪽의 피연산자가 같지 않으면 참을 반환함.

!==
왼쪽의 피연산자와 오른쪽의 피연산자가 같지 않거나, 타입이 다르면 참을 반환함.

<?php
    $num_01 =10;
    $num_02 =4;
    $result = ($num_01 > $num_02) ? $num_01 : $num_02;
    echo "둘 중 큰 수는 {$result} 입니다.";
?>
결과값:둘 중 큰 수는 10 입니다

데이터베이스 연결 예시
<?php
$host = 'localhost'; // MySQL 호스트
$username = 'root'; // MySQL 사용자명
$password = 'password'; // MySQL 비밀번호
$database = 'mydatabase'; // 사용할 데이터베이스명

$conn = mysqli_connect($host, $username, $password, $database);

if (!$conn) {
    die('MySQL 연결 실패: ' . mysqli_connect_error());
}
?>
